<%- include('partials/header', { title: 'Logs & Analytics' }) %>

<div class="container-fluid">
  <div class="row mb-4">
    <div class="col-md-6">
      <h1 class="h3 mb-0">Logs & Analytics</h1>
      <p class="text-muted">Track bot activity and performance</p>
    </div>
    <div class="col-md-6 text-md-end">
      <div class="btn-group">
        <a href="/logs" class="btn btn-primary">
          <i class="bi bi-arrow-clockwise me-1"></i> Refresh Logs
        </a>
      </div>
    </div>
  </div>
  
  <!-- Alert Messages -->
  <% if(typeof success_msg !== 'undefined' && success_msg !== '') { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <%= success_msg %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if(typeof error_msg !== 'undefined' && error_msg !== '') { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= error_msg %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <!-- Analytics Overview -->
  <div class="row mb-4">
    <div class="col-md-3 mb-4">
      <div class="card stats-card h-100">
        <div class="card-body">
          <i class="bi bi-lightning-charge"></i>
          <div class="count">258</div>
          <div class="label">Commands Today</div>
        </div>
      </div>
    </div>
    
    <div class="col-md-3 mb-4">
      <div class="card stats-card h-100">
        <div class="card-body">
          <i class="bi bi-people"></i>
          <div class="count">42</div>
          <div class="label">Unique Users</div>
        </div>
      </div>
    </div>
    
    <div class="col-md-3 mb-4">
      <div class="card stats-card h-100">
        <div class="card-body">
          <i class="bi bi-box-seam"></i>
          <div class="count">73</div>
          <div class="label">Accounts Generated</div>
        </div>
      </div>
    </div>
    
    <div class="col-md-3 mb-4">
      <div class="card stats-card h-100">
        <div class="card-body">
          <i class="bi bi-check-circle"></i>
          <div class="count">99.8%</div>
          <div class="label">Uptime</div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Charts Section -->
  <div class="row mb-4">
    <div class="col-lg-8 mb-4">
      <div class="card h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Command Usage</h5>
          <div>
            <select class="form-select form-select-sm" id="commandTimeRange">
              <option value="day">Today</option>
              <option value="week" selected>Last 7 days</option>
              <option value="month">Last 30 days</option>
            </select>
          </div>
        </div>
        <div class="card-body">
          <canvas id="commandUsageChart" height="250"></canvas>
        </div>
      </div>
    </div>
    
    <div class="col-lg-4 mb-4">
      <div class="card h-100">
        <div class="card-header">
          <h5 class="mb-0">Popular Commands</h5>
        </div>
        <div class="card-body">
          <canvas id="popularCommandsChart" height="250"></canvas>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Logs Section -->
  <div class="row">
    <div class="col-lg-12">
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Recent Logs</h5>
          <div class="btn-group">
            <button type="button" class="btn btn-sm btn-outline-secondary" id="refreshLogs">
              <i class="bi bi-arrow-repeat me-1"></i> Refresh
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="clearLogs">
              <i class="bi bi-trash me-1"></i> Clear
            </button>
          </div>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive log-container" style="max-height: 400px; overflow-y: auto;">
            <table class="table mb-0">
              <thead class="position-sticky top-0" style="background-color: var(--secondary-color);">
                <tr>
                  <th width="150">Time</th>
                  <th width="100">Level</th>
                  <th>Event</th>
                  <th width="150">User</th>
                </tr>
              </thead>
              <tbody id="logTableBody">
                <!-- Example logs - would be replaced with actual data -->
                <tr>
                  <td><small class="text-muted">2023-03-17 14:32:15</small></td>
                  <td><span class="badge bg-info">INFO</span></td>
                  <td>Bot connected to Discord API</td>
                  <td>System</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:35:22</small></td>
                  <td><span class="badge bg-success">CMD</span></td>
                  <td>Command executed: <code>.gen netflix</code></td>
                  <td>User#1234</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:36:45</small></td>
                  <td><span class="badge bg-warning">WARN</span></td>
                  <td>Rate limit approached in channel #general</td>
                  <td>System</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:40:12</small></td>
                  <td><span class="badge bg-success">CMD</span></td>
                  <td>Command executed: <code>.check</code></td>
                  <td>Member#5678</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:43:05</small></td>
                  <td><span class="badge bg-danger">ERROR</span></td>
                  <td>Failed to generate account: stock depleted</td>
                  <td>System</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:45:37</small></td>
                  <td><span class="badge bg-success">CMD</span></td>
                  <td>Command executed: <code>.vouch @User#1234</code></td>
                  <td>Admin#9012</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 14:52:29</small></td>
                  <td><span class="badge bg-info">INFO</span></td>
                  <td>User verified: User#4321</td>
                  <td>System</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 15:01:14</small></td>
                  <td><span class="badge bg-success">CMD</span></td>
                  <td>Command executed: <code>.help</code></td>
                  <td>Newbie#2468</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 15:05:52</small></td>
                  <td><span class="badge bg-success">CMD</span></td>
                  <td>Command executed: <code>.stock</code></td>
                  <td>User#1234</td>
                </tr>
                <tr>
                  <td><small class="text-muted">2023-03-17 15:10:33</small></td>
                  <td><span class="badge bg-info">INFO</span></td>
                  <td>Stock replenished: netflix.txt (15 accounts)</td>
                  <td>System</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Filter Modal -->
  <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="filterModalLabel">Filter Logs</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">Log Levels</label>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="filterInfo" checked>
              <label class="form-check-label" for="filterInfo">
                <span class="badge bg-info">INFO</span> Information
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="filterCmd" checked>
              <label class="form-check-label" for="filterCmd">
                <span class="badge bg-success">CMD</span> Commands
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="filterWarn" checked>
              <label class="form-check-label" for="filterWarn">
                <span class="badge bg-warning">WARN</span> Warnings
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="filterError" checked>
              <label class="form-check-label" for="filterError">
                <span class="badge bg-danger">ERROR</span> Errors
              </label>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="filterDate" class="form-label">Date Range</label>
            <select class="form-select" id="filterDate">
              <option value="all">All Time</option>
              <option value="today" selected>Today</option>
              <option value="week">Last 7 Days</option>
              <option value="month">Last 30 Days</option>
            </select>
          </div>
          
          <div class="mb-3">
            <label for="filterUser" class="form-label">User</label>
            <input type="text" class="form-control" id="filterUser" placeholder="Filter by username">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Apply Filters</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Command Usage Chart
    const commandUsageCtx = document.getElementById('commandUsageChart').getContext('2d');
    const commandUsageChart = new Chart(commandUsageCtx, {
      type: 'line',
      data: {
        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        datasets: [
          {
            label: 'Total Commands',
            data: [45, 59, 80, 81, 56, 55, 70],
            fill: false,
            borderColor: '#5865F2',
            tension: 0.4
          },
          {
            label: 'Gen Commands',
            data: [25, 39, 60, 51, 36, 25, 40],
            fill: false,
            borderColor: '#57F287',
            tension: 0.4
          },
          {
            label: 'Help Commands',
            data: [15, 10, 15, 20, 12, 18, 25],
            fill: false,
            borderColor: '#FEE75C',
            tension: 0.4
          }
        ]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            ticks: {
              color: '#FFFFFF'
            }
          },
          x: {
            grid: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            ticks: {
              color: '#FFFFFF'
            }
          }
        },
        plugins: {
          legend: {
            labels: {
              color: '#FFFFFF'
            }
          }
        }
      }
    });
    
    // Popular Commands Chart
    const popularCommandsCtx = document.getElementById('popularCommandsChart').getContext('2d');
    const popularCommandsChart = new Chart(popularCommandsCtx, {
      type: 'doughnut',
      data: {
        labels: ['.gen', '.help', '.stock', '.check', 'Other'],
        datasets: [{
          data: [40, 25, 15, 10, 10],
          backgroundColor: [
            '#5865F2',
            '#57F287',
            '#FEE75C',
            '#EB459E',
            '#ED4245'
          ],
          borderColor: 'rgba(0, 0, 0, 0.1)',
          borderWidth: 1
        }]
      },
      options: {
        plugins: {
          legend: {
            position: 'bottom',
            labels: {
              color: '#FFFFFF',
              padding: 15
            }
          }
        }
      }
    });
    
    // Handle command time range change
    document.getElementById('commandTimeRange').addEventListener('change', function() {
      // This would typically make an API call to get new data
      // For now, just update with random data
      const newData1 = Array.from({length: 7}, () => Math.floor(Math.random() * 100));
      const newData2 = Array.from({length: 7}, () => Math.floor(Math.random() * 80));
      const newData3 = Array.from({length: 7}, () => Math.floor(Math.random() * 30));
      
      commandUsageChart.data.datasets[0].data = newData1;
      commandUsageChart.data.datasets[1].data = newData2;
      commandUsageChart.data.datasets[2].data = newData3;
      commandUsageChart.update();
    });
    
    // Log actions
    document.getElementById('refreshLogs').addEventListener('click', function() {
      // This would typically make an API call to refresh logs
      // For now, simulate refresh with a simple message
      const logTableBody = document.getElementById('logTableBody');
      
      // Add a new log entry at the top
      const newRow = document.createElement('tr');
      newRow.innerHTML = `
        <td><small class="text-muted">${new Date().toISOString().slice(0, 19).replace('T', ' ')}</small></td>
        <td><span class="badge bg-info">INFO</span></td>
        <td>Logs refreshed manually</td>
        <td>${document.querySelector('.navbar-user span').textContent}</td>
      `;
      
      logTableBody.insertBefore(newRow, logTableBody.firstChild);
    });
    
    document.getElementById('clearLogs').addEventListener('click', function() {
      if (confirm('Are you sure you want to clear all logs? This action cannot be undone.')) {
        // This would typically make an API call to clear logs
        // For now, just remove all but one entry
        const logTableBody = document.getElementById('logTableBody');
        
        // Remove all existing rows
        while (logTableBody.firstChild) {
          logTableBody.removeChild(logTableBody.firstChild);
        }
        
        // Add a single entry indicating logs were cleared
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
          <td><small class="text-muted">${new Date().toISOString().slice(0, 19).replace('T', ' ')}</small></td>
          <td><span class="badge bg-info">INFO</span></td>
          <td>Logs cleared manually</td>
          <td>${document.querySelector('.navbar-user span').textContent}</td>
        `;
        
        logTableBody.appendChild(newRow);
      }
    });
  });
</script>

<%- include('partials/footer') %>