#!/usr/bin/env python3
import os
import random
import string
import argparse
import uuid

# Create test directory if it doesn't exist
TEST_DIR = "test_cookies/large_test"
os.makedirs(TEST_DIR, exist_ok=True)

# Spotify cookie template
SPOTIFY_TEMPLATE = """# Netscape HTTP Cookie File
# https://curl.se/docs/http-cookies.html
# This file was generated by libcurl! Edit at your own risk.

.spotify.com    TRUE    /       FALSE   0       SP_DC   {token}
.spotify.com    TRUE    /       FALSE   0       sp_landing      {landing}
#HttpOnly_.spotify.com  TRUE    /       FALSE   0       sp_t    {sp_t}
.spotify.com    TRUE    /       FALSE   0       sp_key  {sp_key}
"""

# Netflix cookie template
NETFLIX_TEMPLATE = """# Netscape HTTP Cookie File
# https://curl.se/docs/http-cookies.html
# This file was generated by libcurl! Edit at your own risk.

netflix.com     TRUE    /       TRUE    {expiry}      NetflixId       {netflix_id}
netflix.com     TRUE    /       TRUE    {expiry2}      memclid {memclid}
netflix.com     TRUE    /       TRUE    {expiry2}      SecureNetflixId {secure_id}
www.netflix.com TRUE    /       FALSE   0       nfvdid  {nfvdid}
netflix.com     TRUE    /       TRUE    {expiry3}      clSharedContext {shared_context}
netflix.com     TRUE    /       TRUE    0       hasSeenCookieDisclosure true
"""

# Function to generate random tokens
def generate_random_token(length=64):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

def generate_random_hex(length=32):
    return ''.join(random.choices(string.hexdigits.lower(), k=length))

def parse_args():
    parser = argparse.ArgumentParser(description='Generate test cookie files.')
    parser.add_argument('--spotify', action='store_true', help='Generate Spotify cookies')
    parser.add_argument('--netflix', action='store_true', help='Generate Netflix cookies')
    parser.add_argument('--count', type=int, default=100, help='Number of cookies to generate')
    parser.add_argument('--output', type=str, help='Output file for all cookies (instead of separate files)')
    return parser.parse_args()

def main():
    args = parse_args()
    
    # Default to Spotify if neither is specified
    if not args.spotify and not args.netflix:
        args.spotify = True
    
    num_files = args.count
    
    template = SPOTIFY_TEMPLATE if args.spotify else NETFLIX_TEMPLATE
    cookie_type = "Spotify" if args.spotify else "Netflix"
    
    print(f"Generating {num_files} {cookie_type} test cookies...")
    
    if args.output:
        # Generate all cookies into a single file
        with open(args.output, 'w') as outfile:
            for i in range(num_files):
                if args.spotify:
                    # Generate random tokens for Spotify
                    token = generate_random_token(64)
                    landing = generate_random_token(32)
                    sp_t = generate_random_token(48)
                    sp_key = generate_random_token(32)
                    
                    outfile.write(SPOTIFY_TEMPLATE.format(
                        token=token,
                        landing=landing,
                        sp_t=sp_t,
                        sp_key=sp_key
                    ))
                else:
                    # Generate random tokens for Netflix
                    expiry = random.randint(1685000000, 1696799999)
                    expiry2 = random.randint(1665000000, 1670000000)
                    expiry3 = expiry - random.randint(1, 10000)
                    netflix_id = f"v%3D2%26ct%3DBQAOAAEB{generate_random_token(128)}"
                    memclid = str(uuid.uuid4())
                    secure_id = f"v%3D2%26mac%3DAQEAEQABABQT{generate_random_token(32)}.%26dt%3D{expiry2}275"
                    nfvdid = f"BQFmAAEBEFTMF3{generate_random_token(96)}%3D"
                    shared_context = str(uuid.uuid4())
                    
                    outfile.write(NETFLIX_TEMPLATE.format(
                        expiry=expiry,
                        expiry2=expiry2,
                        expiry3=expiry3,
                        netflix_id=netflix_id,
                        memclid=memclid,
                        secure_id=secure_id,
                        nfvdid=nfvdid,
                        shared_context=shared_context
                    ))
                
                outfile.write("\n\n")
                
                if (i + 1) % 100 == 0:
                    print(f"Generated {i + 1} cookies...")
        
        print(f"Done! Generated {num_files} {cookie_type} cookies in {args.output}")
    else:
        # Generate separate files
        for i in range(num_files):
            filename = os.path.join(TEST_DIR, f"{cookie_type.lower()}_test_cookie_{i:04d}.txt")
            
            with open(filename, 'w') as f:
                if args.spotify:
                    # Generate random tokens for Spotify
                    token = generate_random_token(64)
                    landing = generate_random_token(32)
                    sp_t = generate_random_token(48)
                    sp_key = generate_random_token(32)
                    
                    f.write(SPOTIFY_TEMPLATE.format(
                        token=token,
                        landing=landing,
                        sp_t=sp_t,
                        sp_key=sp_key
                    ))
                else:
                    # Generate random tokens for Netflix
                    expiry = random.randint(1685000000, 1696799999)
                    expiry2 = random.randint(1665000000, 1670000000)
                    expiry3 = expiry - random.randint(1, 10000)
                    netflix_id = f"v%3D2%26ct%3DBQAOAAEB{generate_random_token(128)}"
                    memclid = str(uuid.uuid4())
                    secure_id = f"v%3D2%26mac%3DAQEAEQABABQT{generate_random_token(32)}.%26dt%3D{expiry2}275"
                    nfvdid = f"BQFmAAEBEFTMF3{generate_random_token(96)}%3D"
                    shared_context = str(uuid.uuid4())
                    
                    f.write(NETFLIX_TEMPLATE.format(
                        expiry=expiry,
                        expiry2=expiry2,
                        expiry3=expiry3,
                        netflix_id=netflix_id,
                        memclid=memclid,
                        secure_id=secure_id,
                        nfvdid=nfvdid,
                        shared_context=shared_context
                    ))
            
            if (i + 1) % 100 == 0:
                print(f"Generated {i + 1} files...")
        
        print(f"Done! Generated {num_files} {cookie_type} test cookie files in {TEST_DIR}")

if __name__ == "__main__":
    main()